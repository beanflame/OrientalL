+类 字符串
{
    +属性 原字符串
    +属性 结果
    +属性 长度
    +方法 字符串(字符串)
    {
        <[此类]·字符串> = 字符串
        +指令
        {
            add [此类]·原字符串 lvm string ls_string_length mov [此类]·长度
        }
        +回收 字符串
    }
    +方法 截取(起始位置,长度)
    {
        //起始位置从1开始
        +指令
        {
            add [此类]·截取·长度 add [此类]·截取·起始位置 add [此类]·原字符串  lvm string ls_string_mid mov [此类]·结果
        }
        +回收 起始位置
        +回收 长度
    }
    +方法 替换(要替换的内容,替换为)
    {
        //这个替换方法的风格是BASIC风格的
        //C库中有C风格的接口函数 ls_string_replacepos
        +指令
        {
            add [此类]·替换·替换为 add [此类]·替换·要替换的内容 add [此类]·原字符串 lvm string ls_string_replacestr mov [此类]·结果
        }
        +回收 要替换的内容
        +回收 替换为
    }
    +方法 插入(位置,字符)
    {
        +指令
        {
            add [此类]·插入·字符 add [此类]·插入·位置 add [此类]·原字符串 lvm string ls_string_insert mov [此类]·结果
        }
        +回收 位置
        +回收 字符
    }
    +方法 删除(位置,长度)
    {
        +指令
        {
            add [此类]·删除·长度 add [此类]·删除·位置 add [此类]·原字符串 lvm string ls_string_erase mov [此类]·结果
        }
        +回收 位置
        +回收 长度
    }
}
//介绍一下洛书类的使用
//基本类中有个时间类，我们忽略它，来写一个自己的时间类
//程序作用：同一天内的两个时间，计算相隔秒数
+类 时间
{
    +属性 时
    +属性 分
    +属性 秒
    +属性 标准秒
    +方法 设定时间(时,分,秒)
    {
        <[此类]・字符> = 时 & "时" & 分 & "分" & 秒 & "秒" 
        <[此类]・时> = 时
        <[此类]・分> = 分
        <[此类]・秒> = 秒
        <[此类]・标准秒> = 时 * "60" * "60"
        <[此类]・标准秒> = 分 * "60" + <[此类]・标准秒>
        <[此类]・标准秒> = 秒 + <[此类]・标准秒>
        //编程好习惯，及时回收变量
        //在小程序中无所谓，默认注释了
        //+回收 时
        //+回收 分
        //+回收 秒
    }
}

//现在我们有了一个时间类了
//类中有一个方法 设置变量(时,分,秒)
//四个属性，标准秒代表格式化后的时间
//两时间标准秒之差即代表间隔秒数
+加载 开始
+导入 洛书・标准流
+实例 标准流 标准流
+方法 开始()
{
    +实例 时间 时间1
    时间1・设定时间("1","4","23")
    +实例 时间 时间2
    时间2・设定时间("5","15","45")
    标准流・输出(<时间2・字符> & " 与 " & <时间1・字符> & " 之间的间隔为")
    标准流・输出(<时间2・标准秒> - <时间1・标准秒>)
    标准流・输出("秒\n")
}
//这种方式使用类，输出文件中会包含类的全部内容，文件比较大
//推荐将类分开编写，单独编译后导入，这样输出文件中只包含调用的内容
